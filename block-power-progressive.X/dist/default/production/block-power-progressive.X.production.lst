

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 18 11:40:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F2320
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F2320 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ADRESL	set	4035
    51  0000                     _ADRESH	set	4036
    52  0000                     _PIR1bits	set	3998
    53  0000                     _RCONbits	set	4048
    54  0000                     _TMR0L	set	4054
    55  0000                     _TMR0H	set	4055
    56  0000                     _T0CON	set	4053
    57  0000                     _IPR1bits	set	3999
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _PORTC	set	3970
    60  0000                     _PORTA	set	3968
    61  0000                     _LATCbits	set	3979
    62  0000                     _TRISAbits	set	3986
    63  0000                     _TRISC	set	3988
    64  0000                     _PIE1bits	set	3997
    65  0000                     _ADCON2	set	4032
    66  0000                     _ADCON1	set	4033
    67  0000                     _ADCON0	set	4034
    68  0000                     _INTCONbits	set	4082
    69  0000                     _INTCON2bits	set	4081
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74  0000AA                     __pcinit:
    75                           	callstack 0
    76  0000AA                     start_initialization:
    77                           	callstack 0
    78  0000AA                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (3 bytes)
    82  0000AA  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    83  0000AC  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    84  0000AE  6A01               	clrf	__pbssCOMRAM& (0+255),c
    85  0000B0                     end_of_initialization:
    86                           	callstack 0
    87  0000B0                     __end_of__initialization:
    88                           	callstack 0
    89  0000B0  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    90  0000B2  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    91  0000B4  0100               	movlb	0
    92  0000B6  EF35  F000         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95  000001                     __pbssCOMRAM:
    96                           	callstack 0
    97  000001                     _convert_ad:
    98                           	callstack 0
    99  000001                     	ds	2
   100  000003                     _flag:
   101                           	callstack 0
   102  000003                     	ds	1
   103                           
   104                           	psect	cstackCOMRAM
   105  000000                     __pcstackCOMRAM:
   106                           	callstack 0
   107  000000                     
   108                           ; 1 bytes @ 0x0
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 75 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1
   128 ;;      Params:         0       0       0
   129 ;;      Locals:         0       0       0
   130 ;;      Temps:          0       0       0
   131 ;;      Totals:         0       0       0
   132 ;;Total ram usage:        0 bytes
   133 ;; Hardware stack levels required when called: 1
   134 ;; This function calls:
   135 ;;		Nothing
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142  00006A                     __ptext0:
   143                           	callstack 0
   144  00006A                     _main:
   145                           	callstack 30
   146  00006A                     
   147                           ;main.c: 77:     PORTA = 0x00;
   148  00006A  0E00               	movlw	0
   149  00006C  6E80               	movwf	128,c	;volatile
   150                           
   151                           ;main.c: 78:     PORTC = 0x00;
   152  00006E  0E00               	movlw	0
   153  000070  6E82               	movwf	130,c	;volatile
   154                           
   155                           ;main.c: 79:     TRISC = 0x00;
   156  000072  0E00               	movlw	0
   157  000074  6E94               	movwf	148,c	;volatile
   158  000076                     
   159                           ;main.c: 80:     TRISAbits.RA0 = 1;
   160  000076  8092               	bsf	146,0,c	;volatile
   161  000078                     
   162                           ;main.c: 83:     INTCONbits.GIE = 1;
   163  000078  8EF2               	bsf	242,7,c	;volatile
   164  00007A                     
   165                           ;main.c: 84:     INTCONbits.PEIE = 1;
   166  00007A  8CF2               	bsf	242,6,c	;volatile
   167                           
   168                           ;main.c: 85:     ADCON0 = 0b00000001;
   169  00007C  0E01               	movlw	1
   170  00007E  6EC2               	movwf	194,c	;volatile
   171                           
   172                           ;main.c: 86:     ADCON1 = 0b00001110;
   173  000080  0E0E               	movlw	14
   174  000082  6EC1               	movwf	193,c	;volatile
   175                           
   176                           ;main.c: 87:     ADCON2 = 0b10001101;
   177  000084  0E8D               	movlw	141
   178  000086  6EC0               	movwf	192,c	;volatile
   179  000088                     
   180                           ;main.c: 88:     PIE1bits.ADIE = 1;
   181  000088  8C9D               	bsf	157,6,c	;volatile
   182  00008A                     
   183                           ;main.c: 89:     IPR1bits.ADIP = 1;
   184  00008A  8C9F               	bsf	159,6,c	;volatile
   185                           
   186                           ;main.c: 93:     T0CON = 0b10010111;
   187  00008C  0E97               	movlw	151
   188  00008E  6ED5               	movwf	213,c	;volatile
   189  000090                     
   190                           ;main.c: 96:     INTCONbits.TMR0IE = 1;
   191  000090  8AF2               	bsf	242,5,c	;volatile
   192  000092                     
   193                           ;main.c: 97:     INTCONbits.TMR0IF = 1;
   194  000092  84F2               	bsf	242,2,c	;volatile
   195  000094                     
   196                           ;main.c: 98:     PIE1bits.RCIE = 0;
   197  000094  9A9D               	bcf	157,5,c	;volatile
   198  000096                     
   199                           ;main.c: 99:     TMR0H = 0xFF;
   200  000096  68D7               	setf	215,c	;volatile
   201                           
   202                           ;main.c: 100:     TMR0L = 0xB1;
   203  000098  0EB1               	movlw	177
   204  00009A  6ED6               	movwf	214,c	;volatile
   205  00009C                     
   206                           ;main.c: 101:     INTCON2bits.TMR0IP =1;
   207  00009C  84F1               	bsf	241,2,c	;volatile
   208  00009E                     
   209                           ;main.c: 102:     RCONbits.IPEN = 1;
   210  00009E  8ED0               	bsf	208,7,c	;volatile
   211  0000A0                     
   212                           ;main.c: 103:     ADCON0bits.GO = 1;
   213  0000A0  82C2               	bsf	194,1,c	;volatile
   214  0000A2                     l49:
   215  0000A2  EF51  F000         	goto	l49
   216  0000A6  EF33  F000         	goto	start
   217  0000AA                     __end_of_main:
   218                           	callstack 0
   219                           
   220 ;; *************** function _my_isr *****************
   221 ;; Defined at:
   222 ;;		line 115 in file "main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1
   236 ;;      Params:         0       0       0
   237 ;;      Locals:         0       0       0
   238 ;;      Temps:          0       0       0
   239 ;;      Totals:         0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		Interrupt level 2
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	intcode
   250  000008                     __pintcode:
   251                           	callstack 0
   252  000008                     _my_isr:
   253                           	callstack 30
   254                           
   255                           ;incstack = 0
   256  000008  8204               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   257  00000A                     
   258                           ;main.c: 118:      if (INTCONbits.TMR0IF == 1){
   259  00000A  A4F2               	btfss	242,2,c	;volatile
   260  00000C  EF0A  F000         	goto	i2u1_41
   261  000010  EF0C  F000         	goto	i2u1_40
   262  000014                     i2u1_41:
   263  000014  EF10  F000         	goto	i2l771
   264  000018                     i2u1_40:
   265  000018                     
   266                           ;main.c: 119:         TMR0H = 0xFF;
   267  000018  68D7               	setf	215,c	;volatile
   268  00001A                     
   269                           ;main.c: 120:         TMR0L = 0xB1;
   270  00001A  0EB1               	movlw	177
   271  00001C  6ED6               	movwf	214,c	;volatile
   272  00001E                     
   273                           ;main.c: 121:         INTCONbits.TMR0IF = 0;
   274  00001E  94F2               	bcf	242,2,c	;volatile
   275  000020                     i2l771:
   276                           
   277                           ;main.c: 124:      if (PIR1bits.ADIF == 1){
   278  000020  AC9E               	btfss	158,6,c	;volatile
   279  000022  EF15  F000         	goto	i2u2_41
   280  000026  EF17  F000         	goto	i2u2_40
   281  00002A                     i2u2_41:
   282  00002A  EF31  F000         	goto	i2l61
   283  00002E                     i2u2_40:
   284  00002E                     
   285                           ;main.c: 125:          convert_ad = (uint16_t) ADRESH<<8;
   286  00002E  50C4               	movf	196,w,c	;volatile
   287  000030  6E02               	movwf	(_convert_ad+1)^0,c
   288  000032  6A01               	clrf	_convert_ad^0,c
   289  000034                     
   290                           ;main.c: 126:          convert_ad = convert_ad + ADRESL;
   291  000034  50C3               	movf	195,w,c	;volatile
   292  000036  2401               	addwf	_convert_ad^0,w,c
   293  000038  6E01               	movwf	_convert_ad^0,c
   294  00003A  0E00               	movlw	0
   295  00003C  2002               	addwfc	(_convert_ad+1)^0,w,c
   296  00003E  6E02               	movwf	(_convert_ad+1)^0,c
   297  000040                     
   298                           ;main.c: 128:          if(convert_ad > 0x0067){
   299  000040  5002               	movf	(_convert_ad+1)^0,w,c
   300  000042  E109               	bnz	i2u3_40
   301  000044  0E68               	movlw	104
   302  000046  5C01               	subwf	_convert_ad^0,w,c
   303  000048  A0D8               	btfss	status,0,c
   304  00004A  EF29  F000         	goto	i2u3_41
   305  00004E  EF2B  F000         	goto	i2u3_40
   306  000052                     i2u3_41:
   307  000052  EF2E  F000         	goto	i2l59
   308  000056                     i2u3_40:
   309  000056                     
   310                           ;main.c: 129:              LATCbits.LATC7 =1;
   311  000056  8E8B               	bsf	139,7,c	;volatile
   312                           
   313                           ;main.c: 130:          }else{
   314  000058  EF2F  F000         	goto	i2l60
   315  00005C                     i2l59:
   316                           
   317                           ;main.c: 131:              LATCbits.LATC7 =0;
   318  00005C  9E8B               	bcf	139,7,c	;volatile
   319  00005E                     i2l60:
   320                           
   321                           ;main.c: 134:           PIR1bits.ADIF = 0;
   322  00005E  9C9E               	bcf	158,6,c	;volatile
   323                           
   324                           ;main.c: 135:           ADCON0bits.GO = 1;
   325  000060  82C2               	bsf	194,1,c	;volatile
   326  000062                     i2l61:
   327  000062  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   328  000064  0011               	retfie		f
   329  000066                     __end_of_my_isr:
   330                           	callstack 0
   331  0000                     
   332                           	psect	rparam
   333  0000                     
   334                           	psect	temp
   335  000004                     btemp:
   336                           	callstack 0
   337  000004                     	ds	1
   338  0000                     int$flags	set	btemp
   339  0000                     wtemp8	set	btemp+1
   340  0000                     ttemp5	set	btemp+1
   341  0000                     ttemp6	set	btemp+4
   342  0000                     ttemp7	set	btemp+8
   343                           
   344                           	psect	idloc
   345                           
   346                           ;Config register IDLOC0 @ 0x200000
   347                           ;	unspecified, using default values
   348  200000                     	org	2097152
   349  200000  FF                 	db	255
   350                           
   351                           ;Config register IDLOC1 @ 0x200001
   352                           ;	unspecified, using default values
   353  200001                     	org	2097153
   354  200001  FF                 	db	255
   355                           
   356                           ;Config register IDLOC2 @ 0x200002
   357                           ;	unspecified, using default values
   358  200002                     	org	2097154
   359  200002  FF                 	db	255
   360                           
   361                           ;Config register IDLOC3 @ 0x200003
   362                           ;	unspecified, using default values
   363  200003                     	org	2097155
   364  200003  FF                 	db	255
   365                           
   366                           ;Config register IDLOC4 @ 0x200004
   367                           ;	unspecified, using default values
   368  200004                     	org	2097156
   369  200004  FF                 	db	255
   370                           
   371                           ;Config register IDLOC5 @ 0x200005
   372                           ;	unspecified, using default values
   373  200005                     	org	2097157
   374  200005  FF                 	db	255
   375                           
   376                           ;Config register IDLOC6 @ 0x200006
   377                           ;	unspecified, using default values
   378  200006                     	org	2097158
   379  200006  FF                 	db	255
   380                           
   381                           ;Config register IDLOC7 @ 0x200007
   382                           ;	unspecified, using default values
   383  200007                     	org	2097159
   384  200007  FF                 	db	255
   385                           
   386                           	psect	config
   387                           
   388                           ; Padding undefined space
   389  300000                     	org	3145728
   390  300000  FF                 	db	255
   391                           
   392                           ;Config register CONFIG1H @ 0x300001
   393                           ;	Oscillator Selection bits
   394                           ;	OSC = HS, HS Oscillator
   395                           ;	Fail-Safe Clock Monitor Enable bit
   396                           ;	FSCM = ON, Fail-Safe Clock Monitor enabled
   397                           ;	Internal/External Switchover bit
   398                           ;	IESO = ON, Internal/External Switchover mode enabled
   399  300001                     	org	3145729
   400  300001  C2                 	db	194
   401                           
   402                           ;Config register CONFIG2L @ 0x300002
   403                           ;	Power-up Timer enable bit
   404                           ;	PWRT = OFF, PWRT disabled
   405                           ;	Brown-out Reset enable bit
   406                           ;	BOR = ON, Brown-out Reset enabled
   407                           ;	Brown-out Reset Voltage bits
   408                           ;	BORV = 20, VBOR set to 2.0V
   409  300002                     	org	3145730
   410  300002  0F                 	db	15
   411                           
   412                           ;Config register CONFIG2H @ 0x300003
   413                           ;	Watchdog Timer Enable bit
   414                           ;	WDT = ON, WDT enabled
   415                           ;	Watchdog Timer Postscale Select bits
   416                           ;	WDTPS = 32768, 1:32768
   417  300003                     	org	3145731
   418  300003  1F                 	db	31
   419                           
   420                           ; Padding undefined space
   421  300004                     	org	3145732
   422  300004  FF                 	db	255
   423                           
   424                           ;Config register CONFIG3H @ 0x300005
   425                           ;	CCP2 MUX bit
   426                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   427                           ;	PORTB A/D Enable bit
   428                           ;	PBAD = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
   429                           ;	MCLR Pin Enable bit
   430                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   431  300005                     	org	3145733
   432  300005  83                 	db	131
   433                           
   434                           ;Config register CONFIG4L @ 0x300006
   435                           ;	Stack Full/Underflow Reset Enable bit
   436                           ;	STVR = ON, Stack full/underflow will cause Reset
   437                           ;	Single-Supply ICSP Enable bit
   438                           ;	LVP = ON, Single-Supply ICSP enabled
   439                           ;	Background Debugger Enable bit
   440                           ;	DEBUG = 0x1, unprogrammed default
   441  300006                     	org	3145734
   442  300006  85                 	db	133
   443                           
   444                           ; Padding undefined space
   445  300007                     	org	3145735
   446  300007  FF                 	db	255
   447                           
   448                           ;Config register CONFIG5L @ 0x300008
   449                           ;	Code Protection bit
   450                           ;	CP0 = OFF, Block 0 (000200-0007FFh) not code-protected
   451                           ;	Code Protection bit
   452                           ;	CP1 = OFF, Block 1 (000800-000FFFh) not code-protected
   453                           ;	Code Protection bit
   454                           ;	CP2 = OFF, Block 2 (001000-0017FFh) not code-protected
   455                           ;	Code Protection bit
   456                           ;	CP3 = OFF, Block 3 (001800-001FFFh) not code-protected
   457  300008                     	org	3145736
   458  300008  0F                 	db	15
   459                           
   460                           ;Config register CONFIG5H @ 0x300009
   461                           ;	Boot Block Code Protection bit
   462                           ;	CPB = OFF, Boot block (000000-0001FFh) is not code-protected
   463                           ;	Data EEPROM Code Protection bit
   464                           ;	CPD = OFF, Data EEPROM is not code-protected
   465  300009                     	org	3145737
   466  300009  C0                 	db	192
   467                           
   468                           ;Config register CONFIG6L @ 0x30000A
   469                           ;	Write Protection bit
   470                           ;	WRT0 = OFF, Block 0 (000200-0007FFh) not write-protected
   471                           ;	Write Protection bit
   472                           ;	WRT1 = OFF, Block 1 (000800-000FFFh) not write-protected
   473                           ;	Write Protection bit
   474                           ;	WRT2 = OFF, Block 2 (001000-0017FFh) not write-protected
   475                           ;	Write Protection bit
   476                           ;	WRT3 = OFF, Block 3 (001800-001FFFh) not write-protected
   477  30000A                     	org	3145738
   478  30000A  0F                 	db	15
   479                           
   480                           ;Config register CONFIG6H @ 0x30000B
   481                           ;	Configuration Register Write Protection bit
   482                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   483                           ;	Boot Block Write Protection bit
   484                           ;	WRTB = OFF, Boot block (000000-0001FFh) is not write-protected
   485                           ;	Data EEPROM Write Protection bit
   486                           ;	WRTD = OFF, Data EEPROM is not write-protected
   487  30000B                     	org	3145739
   488  30000B  E0                 	db	224
   489                           
   490                           ;Config register CONFIG7L @ 0x30000C
   491                           ;	Table Read Protection bit
   492                           ;	EBTR0 = OFF, Block 0 (000200-0007FFh) not protected from table reads executed in other
      +                           blocks
   493                           ;	Table Read Protection bit
   494                           ;	EBTR1 = OFF, Block 1 (000800-000FFFh) not protected from table reads executed in other
      +                           blocks
   495                           ;	Table Read Protection bit
   496                           ;	EBTR2 = OFF, Block 2 (001000-0017FFh) not protected from table reads executed in other
      +                           blocks
   497                           ;	Table Read Protection bit
   498                           ;	EBTR3 = OFF, Block 3 (001800-001FFFh) not protected from table reads executed in other
      +                           blocks
   499  30000C                     	org	3145740
   500  30000C  0F                 	db	15
   501                           
   502                           ;Config register CONFIG7H @ 0x30000D
   503                           ;	Boot Block Table Read Protection bit
   504                           ;	EBTRB = OFF, Boot block (000000-0001FFh) is not protected from table reads executed in
      +                           other blocks
   505  30000D                     	org	3145741
   506  30000D  40                 	db	64
   507                           tosu	equ	0xFFF
   508                           tosh	equ	0xFFE
   509                           tosl	equ	0xFFD
   510                           stkptr	equ	0xFFC
   511                           pclatu	equ	0xFFB
   512                           pclath	equ	0xFFA
   513                           pcl	equ	0xFF9
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           prodh	equ	0xFF4
   519                           prodl	equ	0xFF3
   520                           indf0	equ	0xFEF
   521                           postinc0	equ	0xFEE
   522                           postdec0	equ	0xFED
   523                           preinc0	equ	0xFEC
   524                           plusw0	equ	0xFEB
   525                           fsr0h	equ	0xFEA
   526                           fsr0l	equ	0xFE9
   527                           wreg	equ	0xFE8
   528                           indf1	equ	0xFE7
   529                           postinc1	equ	0xFE6
   530                           postdec1	equ	0xFE5
   531                           preinc1	equ	0xFE4
   532                           plusw1	equ	0xFE3
   533                           fsr1h	equ	0xFE2
   534                           fsr1l	equ	0xFE1
   535                           bsr	equ	0xFE0
   536                           indf2	equ	0xFDF
   537                           postinc2	equ	0xFDE
   538                           postdec2	equ	0xFDD
   539                           preinc2	equ	0xFDC
   540                           plusw2	equ	0xFDB
   541                           fsr2h	equ	0xFDA
   542                           fsr2l	equ	0xFD9
   543                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       3
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _my_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0       3       1        2.4%
BITBIGSFRhhllhh     20      0       0      12        0.0%
BITBIGSFRhhlhhh     19      0       0       9        0.0%
BITBIGSFRhhh         D      0       0       8        0.0%
BITBIGSFRhhlhll      B      0       0      11        0.0%
BITBIGSFRhhlll       8      0       0      13        0.0%
BITBIGSFRhlll        8      0       0      16        0.0%
BITBIGSFRhllh        6      0       0      15        0.0%
BITBIGSFRhhlhlh      4      0       0      10        0.0%
BITBIGSFRhlh         1      0       0      14        0.0%
BITBIGSFRl           1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      18        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 18 11:40:27 2022

                     l50 00A2                       l49 00A2                      l741 0078  
                    l751 0092                      l743 007A                      l761 00A0  
                    l753 0094                      l745 0088                      l737 006A  
                    l755 0096                      l747 008A                      l739 0076  
                    l757 009C                      l749 0090                      l759 009E  
                   i2l60 005E                     i2l61 0062                     i2l59 005C  
                   _flag 0003                     _main 006A                     btemp 0004  
                   start 0066             ___param_bank 000000                    ?_main 0000  
                  _T0CON 000FD5                    i2l771 0020                    i2l763 000A  
                  i2l773 002E                    i2l765 0018                    i2l775 0034  
                  i2l767 001A                    i2l777 0040                    i2l769 001E  
                  i2l779 0056                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTC 000F82                    _TRISC 000F94  
                  ttemp5 0005                    ttemp6 0008                    ttemp7 000C  
                  status 000FD8                    wtemp8 0005          __initialization 00AA  
           __end_of_main 00AA                   ??_main 0000            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   i2u1_40 0018  
                 i2u1_41 0014                   i2u2_40 002E                   i2u2_41 002A  
                 i2u3_40 0056                   i2u3_41 0052                   _my_isr 0008  
                 isa$std 000001               __accesstop 0080  __end_of__initialization 00B0  
          ___rparam_used 000001           __pcstackCOMRAM 0000                  ?_my_isr 0000  
             _convert_ad 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00AA                  __ramtop 0200                  __ptext0 006A  
   end_of_initialization 00B0                _TRISAbits 000F92           __end_of_my_isr 0066  
    start_initialization 00AA                 ??_my_isr 0000              __pbssCOMRAM 0001  
              __pintcode 0008                 _LATCbits 000F8B                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 _PIR1bits 000F9E                 _RCONbits 000FD0  
             _ADCON0bits 000FC2              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000                 int$flags 0004  
             _INTCONbits 000FF2                 intlevel2 0000  
